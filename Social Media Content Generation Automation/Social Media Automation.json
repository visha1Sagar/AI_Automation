{
  "name": "Social Media Automation",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -496,
        192
      ],
      "id": "571c0207-89cf-4fd3-b703-74ab6449067c",
      "name": "When chat message received",
      "webhookId": "c0056b2c-fc96-4c50-a541-88cbb94452dc"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        496,
        176
      ],
      "id": "150c026a-8004-4a4c-8431-65a5c23190c7",
      "name": "No Operation, do nothing",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "return {\n  json: {\n    message: $input.item.json.output.answerToUser\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        352,
        160
      ],
      "id": "928d948e-c4cd-4637-a689-4ac898912592",
      "name": "Code"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -320,
        384
      ],
      "id": "a6dfc90b-e19d-44b7-b2ce-8ece6410c40f",
      "name": "Gemini",
      "credentials": {
        "googlePalmApi": {
          "id": "SlmvhhNUiiM8jd8Q",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 2
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -208,
        384
      ],
      "id": "09edc2ce-c2b2-4bcb-86aa-bc34dcb36a08",
      "name": "Memory"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"continueChattingYesorNo\": \"Yes\",\n  \"answerToUser\": \"How're you\",\n  \"BUSINESS_PROFILE\": {\n    \"business_basics\": {\n      \"name\": \"GreenThumb Gardens\",\n      \"description\": \"An online retailer specializing in sustainable gardening supplies, from organic seeds and heirloom plants to eco-friendly tools and composting solutions.\",\n      \"industry\": \"E-commerce, Home & Garden, Sustainability\",\n      \"target_audience\": \"Eco-conscious home gardeners, urban dwellers with limited space, permaculture enthusiasts, and anyone looking to grow their own food sustainably.\",\n      \"value_proposition\": \"GreenThumb Gardens provides high-quality, sustainably sourced gardening products that empower individuals to cultivate thriving, environmentally friendly gardens, regardless of their experience level or space constraints.\",\n      \"business_stage\": \"Growth Stage (established online presence, seeking to expand product lines and market reach)\"\n    },\n    \"social_media_current\": \"Active on Instagram (daily tips, garden aesthetics), Facebook (community group, product updates), and Pinterest (inspiration boards, DIY guides). Limited presence on TikTok and YouTube.\",\n    \"competitors\": {\n      \"known_competitors\": [\n        \"Burpee (traditional seed catalog)\",\n        \"Gardeners Supply Company (established online retailer)\",\n        \"local nurseries (brick-and-mortar)\",\n        \"Amazon (broad marketplace)\"\n      ],\n      \"admired_competitors\": [\n        \"Baker Creek Heirloom Seeds (strong niche, excellent photography, community focus)\",\n        \"Johnny's Selected Seeds (educational content, reliable information)\"\n      ],\n      \"competitive_advantages\": [\n        \"Exclusive focus on sustainable and organic products\",\n        \"Curated selection of unique and rare plant varieties\",\n        \"Strong emphasis on educational content and community building\",\n        \"Excellent customer support and personalized recommendations\"\n      ],\n      \"market_position\": \"Niche leader in sustainable online gardening supplies, aiming to become the go-to resource for eco-conscious growers.\"\n    },\n    \"content_strategy\": {\n      \"preferred_approach\": \"Educational and inspirational, with a mix of practical guides, beautiful visuals, and community-driven content.\",\n      \"brand_voice\": \"Friendly, knowledgeable, encouraging, and passionate about sustainability. Avoid overly technical jargon, but maintain authority.\",\n      \"content_themes\": [\n        \"Organic pest control and disease prevention\",\n        \"Composting and soil health\",\n        \"Urban gardening and small-space solutions\",\n        \"Growing specific plant varieties (e.g., tomatoes, herbs, berries)\",\n        \"DIY garden projects and upcycling\",\n        \"Seasonal gardening tips and planning\"\n      ],\n      \"visual_style\": \"Bright, natural, authentic, and inviting. High-quality photography featuring lush gardens, healthy plants, and happy gardeners. Use of earthy tones and natural light.\",\n      \"risk_tolerance\": \"Moderate. Willing to experiment with new content formats (e.g., short-form video series, interactive quizzes) and engage in topical discussions related to environmental sustainability, but will avoid overly controversial or polarizing subjects.\"\n    }\n  }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -48,
        384
      ],
      "id": "92912550-6325-48a2-8b8b-82e381ff5433",
      "name": "Structured Output"
    },
    {
      "parameters": {
        "operation": "google_trends",
        "q": "={{ $json.query }}",
        "additionalFields": {
          "data_type": "RELATED_QUERIES"
        },
        "requestOptions": {}
      },
      "type": "n8n-nodes-serpapi.serpApi",
      "typeVersion": 1,
      "position": [
        1520,
        304
      ],
      "id": "4efb38b6-a48b-47c2-9db6-e1824fe498f0",
      "name": "Google_trends search",
      "credentials": {
        "serpApi": {
          "id": "annWYJ92VKQy0I0V",
          "name": "SerpApi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert content strategist and market researcher. Your goal is to identify relevant and trending topics for the given business, using Google Trends.\n\nYou will be provided with a JSON object containing the business's full profile, including their name, description, industry, target audience, competitive advantages, preferred content approach, and content themes.\n\nBased on this information, dynamically determine the following for Google Trends searches:\n\n1.  **Geographic Location (geo):** Infer the primary country or region code (e.g., \"US\", \"CA\", \"GB\") from the target audience or business location implied in the profile. If no specific country is implied, default to \"US\".\n    * **Guidance:** Look at \"target_audience\" and \"business_basics.name/description\" for clues.\n2.  **Language (hl):** Infer the primary language code (e.g., \"en\", \"es\", \"fr\") based on the target audience or general business context. Default to \"en\" if not clearly specified.\n    * **Guidance:** Assume English unless strong indicators of another language are present.\n3.  **Search Queries (q):** Generate up to 5 highly relevant and distinct comma-separated search queries. These queries should cover:\n    * Core Business & Industry Keywords (e.g., \"specialty coffee\", \"ethical coffee\", \"coffee roasting\").\n    * Specific Content Themes & Interests (e.g., \"bean origins\", \"brewing tips\", \"behind-the-scenes roasting\").\n    * Audience Interests (what might \"Coffee lovers aged 25-45 who value quality, sustainability, and craft\" search for?).\n    * Consider potential long-tail or niche opportunities.\n4.  **Date Range (date):** Always set this to look for recent trends. Use \"now 7-d\" (past 7 days) to capture current trending topics. This will be an expression like: `=now 7-d`.\n\n**Your output must be a JSON object that strictly adheres to the n8n HTTP Request node structure provided below.**\n* The `q` parameter in `queryParameters` should contain the comma-separated string of queries generated based on the above criteria.\n* The `geo` parameter should contain the inferred geographic location code.\n* The `hl` parameter should contain the inferred language code.\n* The `date` parameter should be the dynamic string `={{ $now.minus({ days: 7 }).format('yyyy-MM-dd') }} {{ $now.format('yyyy-MM-dd') }}`. **Crucially, ensure this is output as a raw string with the n8n expression intact.** This will allow n8n to evaluate it dynamically.\n* The `data_type` should remain \"RELATED_QUERIES\".\n\n\nOutput as this example:\n{\n  \"q\": \"specialty coffee trends, ethical coffee beans, home brewing tips, roasted coffee flavor profiles, sustainable coffee sourcing\",\n  \"geo\": \"US\",\n  \"hl\": \"en\",\n  \"date\": \"={{ $now.minus({ days: 7 }).format('yyyy-MM-dd') }} {{ $now.format('yyyy-MM-dd') }}\"\n}\n\n\n**Given Business Profile JSON:**\n:{{ $json.output.BUSINESS_PROFILE.toJsonString() }}",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        976,
        976
      ],
      "id": "0f06d329-e6cc-416d-bf96-2e7f0d8dd412",
      "name": "AI Agent2"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Expert Social Media Strategist - Business Discovery Agent\nYou are an expert social media strategist and business consultant conducting a smooth, engaging discovery session. Your mission is to understand their business while keeping them excited about the process - NOT to overwhelm them with lengthy questioning.\nCore Philosophy:\nKEEP IT SMOOTH & EASY - We can learn more through feedback later, but only if they stick with the process. Quality over quantity in questioning.\nUser's Current Message:\n{{ $json.chatInput }}\nYour Objectives:\n\nUnderstand their business - industry, target audience, unique value proposition, goals\nIdentify competitive landscape - who they compete with and how\nDetermine content strategy preference - trend-focused vs competitor-inspired vs original\nKeep them engaged - smooth onboarding is MORE important than perfect data collection\nKnow when to stop - gather sufficient info to move forward, not everything possible\n\nInformation Collection Priority:\nESSENTIAL (Must Have):\n\nBusiness Description: What they do, who they help\nTarget Audience: Who their ideal customer is\nKnown Competitors: At least 1-2 main competitors\nContent Approach: Trend-focused, competitor-inspired, or original\n\nNICE TO HAVE (Don't Force):\n\nDetailed demographics, specific pain points, visual preferences\nCurrent social media performance, exact metrics\nDetailed competitive advantages, market positioning nuances\n\nConversation Flow Strategy:\nOPENING (If first interaction):\n\"Hi! I'm here to help you create a winning social media strategy tailored specifically to your business. Let's start with getting to know you better. Can you tell me about your business in a few sentences - what do you do and who do you help?\"\nINTELLIGENT FOLLOW-UP RULES:\n\nVague answers → Ask for ONE specific example (not multiple)\nMention competitors → \"What do you like about their approach?\" (don't deep dive unless they're engaged)\nMention struggles → Acknowledge briefly, don't therapy session\nSeem uncertain → Give 2-3 simple options to choose from\nGetting detailed → Great! Follow their energy level\nGetting short/disengaged → Wrap up and move forward\n\nCONVERSATION MANAGEMENT:\n\nMaximum 2 questions at a time (often just 1 is better)\nAcknowledge their response before asking next question\nUse their language back to them\nMatch their energy - if they're brief, don't force elaboration\nNo interrogation feeling - make it feel like helpful consultation\n\nWhen to Wrap Up:\nStop questioning when you have enough to move forward, even if incomplete:\n\nBasic business understanding ✓\nTarget audience identified ✓\nAt least 1-2 competitors mentioned ✓\nContent approach preference indicated ✓\n\nWrap-up phrase: \"Perfect! I have a great understanding of your business and what you're looking for. Based on everything you've shared, I can see that [summarize key points]. Let me create a customized content strategy that focuses on [their preferences].\"\nCRITICAL: JSON Response Format Requirements\nYou MUST respond with ONLY the JSON object below. Do NOT add any wrapper objects, explanations, or additional text. Your entire response must be this exact JSON structure:\nRequired Values:\n\ncontinueChattingYesorNo: Must be exactly \"Yes\" or \"No\" (capital Y/N)\nAll fields must be filled with meaningful content - no empty strings\nArrays cannot be empty - provide at least placeholder values\n\nEXACT JSON FORMAT (copy this structure exactly):\njson{\n  \"continueChattingYesorNo\": \"Yes\",\n  \"answerToUser\": \"Your conversational response here\",\n  \"BUSINESS_PROFILE\": {\n    \"business_basics\": {\n      \"name\": \"Business name here\",\n      \"description\": \"What they do and who they help\",\n      \"industry\": \"Industry category\",\n      \"target_audience\": \"Who their ideal customer is\",\n      \"value_proposition\": \"What makes them unique\",\n      \"business_stage\": \"Stage of business (startup/growth/established)\"\n    },\n    \"social_media_current\": \"Current social media status or approach\",\n    \"competitors\": {\n      \"known_competitors\": [\"Competitor 1\", \"Competitor 2\"],\n      \"admired_competitors\": [\"Companies they look up to\"],\n      \"competitive_advantages\": [\"What makes them different\"],\n      \"market_position\": \"Where they sit in the market\"\n    },\n    \"content_strategy\": {\n      \"preferred_approach\": \"Their content preference style\",\n      \"brand_voice\": \"Tone and personality\",\n      \"content_themes\": [\"Theme 1\", \"Theme 2\", \"Theme 3\"],\n      \"visual_style\": \"Visual preferences\",\n      \"risk_tolerance\": \"Conservative/moderate/bold approach\"\n    }\n  }\n}\nCommunication Style:\n\nConversational but professional - like a knowledgeable friend helping out\nCurious and engaged - genuine interest in their success\nSupportive and encouraging - build their confidence\nConcise and clear - no overwhelming jargon\nAdaptive - match their communication style and energy level\n\nCRITICAL SUCCESS METRICS:\n\nEngagement Level: Are they giving detailed responses or short ones?\nInformation Quality: Do you have enough to move forward?\nMomentum: Are they still excited or getting fatigued?\n\nRemember: A 70% complete profile with an excited user beats a 100% complete profile with a frustrated user who abandons the process. Keep them moving forward!\nFINAL REMINDER:\nYour response must be ONLY the JSON object above. No explanations, no wrapper objects, no additional text. Just the pure JSON structure.",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -256,
        192
      ],
      "id": "fc8d5c82-2424-496d-a43b-3c3c4b89d614",
      "name": "Data  Collection"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output.continueChattingYesorNo.toLowerCase() }}",
                    "rightValue": "yes",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "c64ab850-e6ed-4bb9-a977-8703b08ae831"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Continue chatting"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "86b732c7-b4a2-4316-bad3-ef806e49ac08",
                    "leftValue": "={{ $json.output.continueChattingYesorNo.toLowerCase() }}",
                    "rightValue": "no",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Memory collected"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        112,
        192
      ],
      "id": "1694f59e-5c5a-4188-ac3c-f27d748b72e7",
      "name": "Enough Data Collected?"
    },
    {
      "parameters": {
        "content": "## 1. Data Collection\ncollecting data about the brand/business to better generate their content\n",
        "height": 448,
        "width": 1232
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -544,
        112
      ],
      "typeVersion": 1,
      "id": "90b61a05-966c-496d-b03d-755111a84a7c",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## 2. Trends Search\nFor more viral content generation",
        "height": 768,
        "width": 1520,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        732,
        -40
      ],
      "typeVersion": 1,
      "id": "c7029bae-487b-4942-8280-ec65cc3b5ed9",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        800,
        544
      ],
      "id": "e7d0d41e-0f52-4e9f-a3bc-18bcf9e69cc5",
      "name": "Gemini ",
      "credentials": {
        "googlePalmApi": {
          "id": "SlmvhhNUiiM8jd8Q",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert content strategist and market researcher. Your goal is to identify relevant and trending topics for the given business, using Google Trends.\n\nYou will be provided with a JSON object containing the business's full profile, including their name, description, industry, target audience, competitive advantages, preferred content approach, and content themes.\n\nBased on this information, dynamically determine the following for Google Trends searches:\n\n1.  **Search Queries (q):** Generate up to 5 highly relevant and distinct comma-separated search queries. These queries should cover:\n    * Core Business & Industry Keywords (e.g., \"specialty coffee\", \"ethical coffee\", \"coffee roasting\").\n    * Specific Content Themes & Interests (e.g., \"bean origins\", \"brewing tips\", \"behind-the-scenes roasting\").\n    * Audience Interests (what might \"Coffee lovers aged 25-45 who value quality, sustainability, and craft\" search for?).\n    * Consider potential long-tail or niche opportunities.\n\n\n**Your output must be a JSON object that strictly adheres to the n8n HTTP Request node structure provided below.**\n* The `q` parameter in `queryParameters` should contain the comma-separated string of queries generated based on the above criteria.\n\n\nOutput as this example:\n{\n  \"q\": \"specialty coffee trends, ethical coffee beans, home brewing tips, roasted coffee flavor profiles, sustainable coffee sourcing\"\n}\n\n\n**Given Business Profile JSON:**\n:{{ $json.output.BUSINESS_PROFILE.toJsonString() }}",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        784,
        336
      ],
      "id": "09d7cb39-2f0f-4c67-abe3-ac1d0edd473c",
      "name": "Google Trend Search Query Generator"
    },
    {
      "parameters": {
        "content": "## 2. Competitor's Data Collection (Scrapping)\nscrape competitors' content for better content generation - apify not working for now :(",
        "height": 432,
        "width": 832,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        736,
        832
      ],
      "typeVersion": 1,
      "id": "2a704c48-8ba6-442c-b96f-9522033b2d21",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1120,
        1120
      ],
      "id": "a9f14121-2054-4390-b6b4-d880a6193b33",
      "name": "Gemini  ",
      "credentials": {
        "googlePalmApi": {
          "id": "SlmvhhNUiiM8jd8Q",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "content": "## 3. Content Generation",
        "height": 608,
        "width": 1312,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2288,
        48
      ],
      "typeVersion": 1,
      "id": "de448fb5-bfd0-4c22-8ce8-692965980148",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2336,
        544
      ],
      "id": "61808b24-e6b1-4b13-ae35-3aa0671c773a",
      "name": "Gemini1",
      "credentials": {
        "googlePalmApi": {
          "id": "SlmvhhNUiiM8jd8Q",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an expert Social Media Content Planner for \"{{ $('Data  Collection').item.json.output.BUSINESS_PROFILE.business_basics.name }}\". Your primary goal is to generate 5 distinct social media content ideas, each including a detailed image prompt, a compelling caption, and relevant hashtags. These ideas should be specifically tailored for Instagram, designed to engage {{ $('Data  Collection').item.json.output.BUSINESS_PROFILE.business_basics.target_audience }}\n\nYou have access to the following information:\n\n---\n**BUSINESS PROFILE:**\n{{ $('Data  Collection').item.json.output.BUSINESS_PROFILE.toJsonString() }}\n\nGOOGLE TRENDS INFORMATION :\n{{ $json.messages.toJsonString() }}\n\n\nINSTRUCTIONS FOR CONTENT GENERATION:\n\nGenerate exactly 5 distinct social media content items. Each item must be a complete, ready-to-use package.\n\nIntegrate insights from the GOOGLE_TRENDS_INFORMATION into the content ideas where relevant and natural, subtly weaving trending topics into captions or image concepts.\n\nStrictly adhere to the brand's brand voice: {{ $('Data  Collection').item.json.output.BUSINESS_PROFILE.content_strategy.brand_voice }}\n\nFocus on the core content themes: {{ $('Data  Collection').item.json.output.BUSINESS_PROFILE.content_strategy.content_themes.toJsonString() }}\n\nEnsure the IMAGE_PROMPT is highly detailed, evocative, and reflective of an \"authentic, artisanal\" visual style. It should guide an AI image generator (e.g., Midjourney, DALL-E) to produce a high-quality, relevant image. Include details about composition, lighting, mood, colors, and specific elements.\n\nCAPTION should be engaging, informative, and encourage interaction or a deeper understanding of brand's values\n\nHASHTAGS should be a mix of broad, niche, and trending (if applicable to the content) to maximize discoverability.\n\nOUTPUT FORMAT:\nProvide your response as a JSON array, where each element is a content item object following this exact structure:\n\nJSON\n{\n \"first\": {\n    \"content_item_number\": 1,\n    \"theme\": \"Brief, descriptive theme for this content piece (e.g., 'Exploring Ethiopian Yirgacheffe Origins')\",\n    \"IMAGE_PROMPT\": \"A hyper-realistic, close-up shot of roasted coffee beans gracefully falling into a vintage, artisan-crafted coffee grinder. Focus on the rich texture of the beans, dramatic chiaroscuro lighting, warm earthy tones, with subtle steam rising. Authentic, artisanal, cinematic, 4k.\",\n    \"CAPTION\": \"Ever wondered what goes into creating that perfect cup? It starts long before the brew. Join us behind the scenes as we prepare our ethically-sourced beans for their transformation. From farm to grinder, every step is a labor of love and precision. #RoastedDreams #CoffeeCraft #EthicalCoffee #BehindTheBeans\",\n    \"HASHTAGS\": [\"#SpecialtyCoffee\", \"#CoffeeRoasting\", \"#BeanToCup\", \"#ArtisanCoffee\", \"#SustainableSourcing\", \"#CoffeeLover\"]\n  },\n  \"second\" : {\n    \"content_item_number\": 2,\n    \"theme\": \"Brief, descriptive theme for this content piece\",\n    \"IMAGE_PROMPT\": \"Detailed prompt for an AI image generator (e.g., 'A minimalist overhead shot of a perfectly brewed pour-over coffee, steam gently rising, with a blooming coffee bed visible in a clear glass carafe. Natural morning light, clean white background, focus on texture and clarity. Authentic, aesthetic, 4k.')\",\n    \"CAPTION\": \"Your morning ritual just got an upgrade! Master the art of the pour-over with our top tips for a consistently delicious cup. From grind size to water temperature, we're breaking down the secrets to unlock your coffee's full potential. What's your favorite brewing method? #PourOverPerfection #BrewingTips #HomeBarista #CoffeeEducation #RoastedDreams #CoffeeCommunity\",\n    \"HASHTAGS\": [\"#BrewGuides\", \"#CoffeeTips\", \"#SpecialtyCoffee\", \"#HomeBrew\", \"#CoffeeLovers\", \"#PerfectCup\"]\n  }\n  }\n\n",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        2352,
        336
      ],
      "id": "aea3562d-c887-4f45-8061-78e433edd061",
      "name": "Planner"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"q\": \"specialty coffee trends, ethical coffee beans, home brewing tips, roasted coffee flavor profiles, sustainable coffee sourcing\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1008,
        528
      ],
      "id": "aba0f554-383f-4d91-8cac-04812adcb49e",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "jsCode": "// The 'items' variable holds the input data from the previous node.\n// It's an array of objects, where each object represents an item in n8n.\n// This code assumes the input will always have at least one item and the expected structure.\nfor (const item of items) {\n  // Access the 'q' property from the 'output' object of the current item.\n  const queryString = item.json.output.q;\n\n  // Split the string by ', ' (comma followed by a space)\n  // Then, map over the resulting array to trim any whitespace from each query.\n  const queries = queryString.split(', ').map(query => query.trim());\n\n  // Transform the array of queries into an array of objects,\n  // where each object represents a single query as a separate item for n8n.\n  // This allows subsequent nodes to process each query individually.\n  const outputItems = queries.map(query => ({\n    json: {\n      query: query // Each query is now under a 'query' key in its own item\n    }\n  }));\n\n  // Return the array of new items.\n  return outputItems;\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1136,
        304
      ],
      "id": "169d5e6d-6b1b-4508-bd7d-547c3e9bfb16",
      "name": "Code1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1328,
        288
      ],
      "id": "f671c092-2e6b-48d1-8900-e3d2189270df",
      "name": "Loop Over Items1"
    },
    {
      "parameters": {
        "mode": "insert",
        "messages": {
          "messageValues": [
            {
              "message": "={{ $('If').all()[0].json.related_queries.toJsonString() }}"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        1888,
        448
      ],
      "id": "7111e8eb-d8b7-48c9-ad73-0b574abb7d97",
      "name": "Chat Memory Manager"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('When chat message received').item.json.sessionId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1872,
        288
      ],
      "id": "8834f404-78aa-43dd-9d16-bcb523727eb6",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "903e114a-0567-4367-8e6f-118fd8b10dfa",
              "leftValue": "={{ $json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1696,
        400
      ],
      "id": "6eb27189-5b02-4e18-b279-ac17678ba77f",
      "name": "If"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        1696,
        112
      ],
      "id": "a08d0fda-62e3-4482-aaac-a258ff378a79",
      "name": "Chat Memory Manager2"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n \"first\": {\n    \"content_item_number\": 1,\n    \"theme\": \"Brief, descriptive theme for this content piece (e.g., 'Exploring Ethiopian Yirgacheffe Origins')\",\n    \"IMAGE_PROMPT\": \"A hyper-realistic, close-up shot of roasted coffee beans gracefully falling into a vintage, artisan-crafted coffee grinder. Focus on the rich texture of the beans, dramatic chiaroscuro lighting, warm earthy tones, with subtle steam rising. Authentic, artisanal, cinematic, 4k.\",\n    \"CAPTION\": \"Ever wondered what goes into creating that perfect cup? It starts long before the brew. Join us behind the scenes as we prepare our ethically-sourced beans for their transformation. From farm to grinder, every step is a labor of love and precision. #RoastedDreams #CoffeeCraft #EthicalCoffee #BehindTheBeans\",\n    \"HASHTAGS\": [\"#SpecialtyCoffee\", \"#CoffeeRoasting\", \"#BeanToCup\", \"#ArtisanCoffee\", \"#SustainableSourcing\", \"#CoffeeLover\"]\n  },\n  \"second\" : {\n    \"content_item_number\": 2,\n    \"theme\": \"Brief, descriptive theme for this content piece\",\n    \"IMAGE_PROMPT\": \"Detailed prompt for an AI image generator (e.g., 'A minimalist overhead shot of a perfectly brewed pour-over coffee, steam gently rising, with a blooming coffee bed visible in a clear glass carafe. Natural morning light, clean white background, focus on texture and clarity. Authentic, aesthetic, 4k.')\",\n    \"CAPTION\": \"Your morning ritual just got an upgrade! Master the art of the pour-over with our top tips for a consistently delicious cup. From grind size to water temperature, we're breaking down the secrets to unlock your coffee's full potential. What's your favorite brewing method? #PourOverPerfection #BrewingTips #HomeBarista #CoffeeEducation #RoastedDreams #CoffeeCommunity\",\n    \"HASHTAGS\": [\"#BrewGuides\", \"#CoffeeTips\", \"#SpecialtyCoffee\", \"#HomeBrew\", \"#CoffeeLovers\", \"#PerfectCup\"]\n  }\n  }\n\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        2576,
        512
      ],
      "id": "4d9d8625-2a06-42c0-9c9b-431bf8e39d97",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "jsCode": "// The 'items' variable holds the input data from the previous node.\n// It's an array of objects, where each object contains the 'output' key\n// with 'first' and 'second' content items.\nconst outputItems = [];\n\n// Iterate over each item received by this node.\nfor (const item of items) {\n  // Check if the 'output' property exists and has 'first' and 'second' content.\n  if (item.json.output && item.json.output.first) {\n    // Add the 'first' content item to our new array.\n    // We wrap it in a 'json' key as n8n expects this structure for new items.\n    outputItems.push({ json: item.json.output.first });\n  }\n\n  if (item.json.output && item.json.output.second) {\n    // Add the 'second' content item to our new array.\n    outputItems.push({ json: item.json.output.second });\n  }\n}\n\n// Return the new array of flattened content items.\n// Each content item (image prompt, caption, hashtags) will now be a separate item\n// in the n8n workflow, ready for individual processing.\nreturn outputItems;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2720,
        336
      ],
      "id": "87058c9f-2bff-41bc-a7d6-19aef5001ad0",
      "name": "Code2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2896,
        352
      ],
      "id": "32ddaa7c-30f1-46d1-8672-b2a578c905f8",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-preview-image-generation:generateContent",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "key",
              "value": "Enter you API Key"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"parts\": [\n        {\n          \"text\": \"{{ $json.IMAGE_PROMPT }}\"\n        }\n      ]\n    }\n  ],\n  \"generationConfig\": {\n    \"responseModalities\": [\n      \"TEXT\",\n      \"IMAGE\"\n    ]\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3072,
        384
      ],
      "id": "c35c6890-65e9-44de-8be9-5818aa74b8b4",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "candidates[0].content.parts[1].inlineData.data",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        3232,
        384
      ],
      "id": "e4e1e868-ccba-465a-bf8b-1a3aa46ae4ba",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "name": "={{ $('Loop Over Items').item.json.theme }}",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        3392,
        384
      ],
      "id": "629d7b8f-dae7-454a-8c1c-dbae011b8243",
      "name": "Upload file",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "LdvzY6Gd8oynVfeT",
          "name": "Google Drive account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Data  Collection",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        []
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gemini": {
      "ai_languageModel": [
        [
          {
            "node": "Data  Collection",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Memory": {
      "ai_memory": [
        [
          {
            "node": "Data  Collection",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output": {
      "ai_outputParser": [
        [
          {
            "node": "Data  Collection",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Data  Collection": {
      "main": [
        [
          {
            "node": "Enough Data Collected?",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Enough Data Collected?": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google Trend Search Query Generator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gemini ": {
      "ai_languageModel": [
        [
          {
            "node": "Google Trend Search Query Generator",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Trend Search Query Generator": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gemini  ": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Gemini1": {
      "ai_languageModel": [
        [
          {
            "node": "Planner",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google_trends search": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Planner": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Google Trend Search Query Generator",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [
          {
            "node": "Chat Memory Manager2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google_trends search",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Chat Memory Manager",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Chat Memory Manager2",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory Manager": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Chat Memory Manager",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory Manager2": {
      "main": [
        [
          {
            "node": "Planner",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Planner",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Upload file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload file": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "b0b4f738-a473-4c4c-9479-a8cff4594122",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "413b6306fb1e0cadc81013b766a1d0334a1f2f01366ca3fde00bf02da66e32ce"
  },
  "id": "kynIVIYEoolw5PKg",
  "tags": []
}